name: Automatic Deployment

on:
  push:
    branches-ignore:
      - '**'
  pull_request:
    types: [opened, synchronize]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Extract Deployment Environment
        id: extract_env
        run: |
          environment=$(git log --format=%B -n 1 ${{ github.sha }} | grep -o '\[deploy:[a-zA-Z]*\]' | sed 's/\[deploy://;s/\]//')
          echo "::set-env name=ENVIRONMENT::$environment"
          echo "ENVIRONMENT=$environment" >> $GITHUB_ENV

      - name: Deploy
        run: |
          if [ "${{ steps.extract_env.outputs.environment }}" == "staging" ]; then
            # Add commands to deploy your application to the staging environment
            echo "Deploying to staging..."
          elif [ "${{ steps.extract_env.outputs.environment }}" == "production" ]; then
            # Add commands to deploy your application to the production environment
            echo "Deploying to production..."
          else
            echo "Environment not specified or unsupported."
            exit 1
          fi
          
      - name: Check Build Status
        if: ${{ failure() }}
        run: |
          echo "Build failed. Disabling merge..."
          echo pull_number:${{github.event.pull_request.number}}
          echo token:${{ secrets.GITHUB_TOKEN }}
          echo test
           curl --request PUT \
          --url "https://api.github.com/repos/qaiserali1994/GithubActions/pulls/${{github.event.pull_request.number}} /merge" \
          --data '{"commit_title":"Merge conflict","merge_method":"squash"}' \
          --header "Authorization: Bearer ${{secrets.GITHUB_TOKEN}}" \
          --header 'content-type: application/json' \
          -s
          #curl --request POST --url https://api.github.com/qaiserali1994/GithubActions/pulls/${{github.event.pull_request.number}} --data '{"commit_title":"Merge conflict","merge_method":"squash"}' --header "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" --header 'content-type: application/json' -s
